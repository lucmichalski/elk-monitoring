version: "3.7"

services:
  mysql:
    image: mysql:5.7
    env_file:
      - ./env/mysql-variables.env
    volumes:
      - mysqldata:/var/lib/mysql
      - ./db/mysql/scripts:/docker-entrypoint-initdb.d
    command:
      - '--slow-query-log=TRUE'
      - '--slow-query-log-file=/var/log/mysql/slow.log'
      - '--long-query-time=1'
    container_name: cluster-mysql
    restart: always
    logging:
     #limit logs to 400MB (4rotations of 100M each)
     driver: "json-file"
     options:
       max-size: "100m"
       max-file: "4"

  mysql-exporter:
    image: prom/mysqld-exporter
    env_file:
      - ./env/mysql-exporter-variables.env
    ports:
      - "9104:9104"
    depends_on:
      - mysql
    command:
      [
        "--collect.info_schema.processlist",
        "--collect.info_schema.innodb_metrics",
        "--collect.info_schema.tablestats",
        "--collect.info_schema.tables",
        "--collect.info_schema.userstats",
      ]
    container_name: cluster-mysql-exporter
    restart: always
    logging:
     #limit logs to 400MB (4rotations of 100M each)
     driver: "json-file"
     options:
       max-size: "100m"
       max-file: "4"

  mongo:
    image: mongo:3
    env_file: ./env/mongo-variables.env
    volumes:
      - ./db/mongo/scripts:/docker-entrypoint-initdb.d
      - mongoconfigdb:/data/configdb
      - mongodatadb:/data/db
    container_name: cluster-mongo
    restart: always
    logging:
     #limit logs to 400MB (4rotations of 100M each)
     driver: "json-file"
     options:
       max-size: "100m"
       max-file: "4"

  memcached:
    image: memcached:alpine
    container_name: cluster-memcached
    restart: always
    logging:
     #limit logs to 400MB (4rotations of 100M each)
     driver: "json-file"
     options:
       max-size: "100m"
       max-file: "4"

  memcached-exporter:
    image: quay.io/prometheus/memcached-exporter
    ports:
      - "9150:9150"
    depends_on:
      - memcached
    command: ["--memcached.address", "memcached:11211"]
    container_name: cluster-memcached-exporter
    restart: always
    logging:
     #limit logs to 400MB (4rotations of 100M each)
     driver: "json-file"
     options:
       max-size: "100m"
       max-file: "4"

  nginx:
    build: ./web/ngx
    ports:
      - "32880:80"
      - "32443:443"
    volumes:
      - ./web/app:/var/www/html/public
      - ./logs/nginx:/var/log/nginx
    environment:
      - PHP_HOST=php
    command: /bin/sh -c "envsubst '$$PHP_HOST' < /etc/nginx/conf.d/server.template > /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;'"
    depends_on:
      - php
    container_name: cluster-nginx
    restart: always
    logging:
     #limit logs to 400MB (4rotations of 100M each)
     driver: "json-file"
     options:
       max-size: "100m"
       max-file: "4"

  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:0.4.2
    ports:
      - "9113:9113"
    command: -nginx.scrape-uri http://nginx:9898/nginx_status
    depends_on:
      - nginx
    container_name: cluster-nginx-exporter
    restart: always
    logging:
     #limit logs to 400MB (4rotations of 100M each)
     driver: "json-file"
     options:
       max-size: "100m"
       max-file: "4"

  php:
    build: ./web/php
    env_file:
      - ./env/web-php-variables.env
    volumes:
      - ./web/app:/var/www/html/public
    depends_on:
      - mysql
      - memcached
    container_name: cluster-php
    restart: always
    logging:
     #limit logs to 400MB (4rotations of 100M each)
     driver: "json-file"
     options:
       max-size: "100m"
       max-file: "4"

  php-exporter:
    image: hipages/php-fpm_exporter
    ports:
      - "9253:9253"
    environment:
      - PHP_FPM_SCRAPE_URI="tcp://php:9000/status"
    depends_on:
      - php
    container_name: cluster-php-exporter
    restart: always
    logging:
     #limit logs to 400MB (4rotations of 100M each)
     driver: "json-file"
     options:
       max-size: "100m"
       max-file: "4"

  apache:
    image: httpd:alpine
    ports:
      - "33880:80"
    container_name: cluster-apache
    restart: always
    logging:
     #limit logs to 400MB (4rotations of 100M each)
     driver: "json-file"
     options:
       max-size: "100m"
       max-file: "4"

  haproxy:
    build: ./web/ha
    ports:
      - "34880:80"
    depends_on:
      - nginx
      - apache
    container_name: cluster-haproxy
    restart: always
    logging:
     #limit logs to 400MB (4rotations of 100M each)
     driver: "json-file"
     options:
       max-size: "100m"
       max-file: "4"

  haproxy-exporter:
    image: prom/haproxy-exporter
    ports:
      - "9101:9101"
    command: 
      - '--haproxy.scrape-uri=http://admin:password@haproxy:8404/haproxy?stats;csv'
      - '--log.level=info'
    container_name: cluster-haproxy-exporter
    restart: always
    logging:
     #limit logs to 400MB (4rotations of 100M each)
     driver: "json-file"
     options:
       max-size: "100m"
       max-file: "4"

  node-exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    container_name: cluster-node-exporter
    restart: always
    logging:
     #limit logs to 400MB (4rotations of 100M each)
     driver: "json-file"
     options:
       max-size: "100m"
       max-file: "4"
  
  cadvisor:
    image: google/cadvisor:latest
    ports:
      - 8080:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    container_name: cluster-cadvisor
    restart: always
    logging:
     #limit logs to 400MB (4rotations of 100M each)
     driver: "json-file"
     options:
       max-size: "100m"
       max-file: "4"

  prometheus:
    image: prom/prometheus
    env_file: ./env/prometheus-secrets.env
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.retention.size=100GB'
      - '--storage.tsdb.retention.time=10d'
    volumes:
      - promdata:/prometheus
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./monitoring/prometheus/alerts:/etc/prometheus/alerts
    ports:
      - "9090:9090"
    container_name: cluster-prometheus
    restart: always
    logging:
     #limit logs to 400MB (4rotations of 100M each)
     driver: "json-file"
     options:
       max-size: "100m"
       max-file: "4"

  alertmanager:
    image: prom/alertmanager
    volumes:
      - alertdata:/alertmanager
      - ./monitoring/alertmanager/config.yml:/etc/alertmanager/config.yml
    ports:
    - "9093:9093"
    command:
      - '--config.file=/etc/alertmanager/config.yml'
    container_name: cluster-alertmanager
    restart: always
    logging:
     #limit logs to 400MB (4rotations of 100M each)
     driver: "json-file"
     options:
       max-size: "100m"
       max-file: "4"

  grafana:
    build: ./monitoring/grafana
    env_file: ./env/grafana-variables.env
    ports:
      - "3000:3000"
    container_name: cluster-grafana
    restart: always
    logging:
     #limit logs to 400MB (4rotations of 100M each)
     driver: "json-file"
     options:
       max-size: "100m"
       max-file: "4"  

volumes:
  mongoconfigdb:
    driver: local
    name: cluster-mongo-confdb

  mongodatadb:
    driver: local
    name: cluster-mongo-datadb

  mysqldata:
    driver: local
    name: cluster-mysql-data
  
  promdata:
    driver: local
    name: cluster-prometheus-data
  
  alertdata:
    driver: local
    name: cluster-alertmanager-data
