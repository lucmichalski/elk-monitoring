version: "3"

services:
  mysql:
    image: mysql:5.7
    env_file:
      - ./env/mysql-variables.env
    volumes:
      - ./db/mysql/scripts:/docker-entrypoint-initdb.d
    container_name: cluster-mysql

  mysql-client:
    image: mysql:5.7
    environment:
      - MYSQL_ROOT_PASSWORD=password
    container_name: cluster-mysql-client

  mysql-exporter:
    image: prom/mysqld-exporter
    env_file:
      - ./env/mysql-exporter-variables.env
    ports:
      - "9104:9104"
    depends_on:
      - mysql
    command:
      [
        "--collect.info_schema.processlist",
        "--collect.info_schema.innodb_metrics",
        "--collect.info_schema.tablestats",
        "--collect.info_schema.tables",
        "--collect.info_schema.userstats",
      ]
    container_name: cluster-mysql-exporter

  mongo:
    image: mongo:3
    env_file: ./env/mongo-variables.env
    volumes:
      - ./db/mongo/scripts:/docker-entrypoint-initdb.d
    container_name: cluster-mongo

  mongo-exporter:
    image: eses/mongodb_exporter
    ports:
      - "9204:9204"
    command: -mongodb.uri mongodb://mongodb_exporter:s3cr3tpassw0rd@mongo:27017 -web.listen-address=":9204"
    depends_on:
      - mongo
    container_name: cluster-mongo-exporter

  memcached:
    image: memcached:alpine
    container_name: cluster-memcached

  memcached-exporter:
    image: quay.io/prometheus/memcached-exporter
    ports:
      - "9150:9150"
    depends_on:
      - memcached
    command: ["--memcached.address", "memcached:11211"]
    container_name: cluster-memcached-exporter

  nginx:
    build: ./web/ngx
    ports:
      - "32880:80"
      - "32443:443"
    volumes:
      - ./web/app:/var/www/html/public
    environment:
      - PHP_HOST=php
    command: /bin/sh -c "envsubst '$$PHP_HOST' < /etc/nginx/conf.d/server.template > /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;'"
    depends_on:
      - php
    container_name: cluster-nginx

  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:0.4.2
    ports:
      - "9113:9113"
    command: -nginx.scrape-uri http://nginx:9898/nginx_status
    depends_on:
      - nginx
    container_name: cluster-nginx-exporter

  php:
    build: ./web/php
    env_file:
      - ./env/web-php-variables.env
    volumes:
      - ./web/app:/var/www/html/public
    depends_on:
      - mysql
      - memcached
    container_name: cluster-php

  php-exporter:
    image: hipages/php-fpm_exporter
    ports:
      - "9253:9253"
    environment:
      - PHP_FPM_SCRAPE_URI="tcp://php:9000/status"
    depends_on:
      - php
    container_name: cluster-php-exporter

  apache:
    image: httpd:alpine
    ports:
      - "33880:80"
    container_name: cluster-apache

  haproxy:
    build: ./web/ha
    ports:
      - "34880:80"
    depends_on:
      - nginx
      - apache
    container_name: cluster-haproxy

  haproxy-exporter:
    image: prom/haproxy-exporter
    ports:
      - "9101:9101"
    command: 
      - '--haproxy.scrape-uri="http://admin:password@haproxy:8404/haproxy?stats;csv"'
      - '--log.level="info"'
    container_name: cluster-haproxy-exporter

  prometheus:
    image: prom/prometheus
    env_file: ./env/prometheus-secrets.env
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    container_name: cluster-prometheus

  alertmanager:
    image: prom/alertmanager
    volumes:
      - ./monitoring/alertmanager/config.yml:/etc/alertmanager/config.yml
    command:
      - '--config.file=/etc/alertmanager/config.yml'
    container_name: cluster-alertmanager

  grafana:
    build: ./monitoring/grafana
    env_file: ./env/grafana-variables.env
    ports:
      - "3000:3000"
    container_name: cluster-grafana
